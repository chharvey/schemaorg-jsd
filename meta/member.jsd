{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://chharvey.github.io/schemaorg-jsd/meta/member.jsd",
  "$comment": "This file is a meta-schema for validating the JSON Schema of a Schema.org Property.",
  "description": "JSON Schema for a Schema.org Property.",
  "allOf": [
    { "$ref": "http://json-schema.org/draft-07/schema#" },
    {
      "type": "object",
      "additionalProperties": false,
      "required": ["$schema", "$id", "title", "description", "definitions", "anyOf"],
      "properties": {
        "$schema"    : true,
        "$id"        : { "type": "string", "format": "uri" },
        "title"      : { "type": "string", "format": "uri", "description": "The canonical URL of the Schema.org Property." },
        "description": { "description": "Schema.orgâ€™s canonical description of the Property." },
        "definitions": {
          "propertyNames": { "const": "ExpectedType" },
          "additionalProperties": {
            "description": "The expected type(s) of the property.",
            "additionalProperties": false,
            "required": ["anyOf"],
            "properties": {
              "anyOf": {
                "description": "Effectively the `sdo:rangeIncludes` of the Property.",
                "items": {
                  "anyOf": [
                    {
                      "description": "A reference to an external JSON schema for a Schema.org Class.",
                      "required": ["$ref"],
                      "properties": {
                        "$ref": true
                      }
                    },
                    {
                      "description": "A primitive type or an array of primitive types.",
                      "definitions": {
                        "primitives": {
                          "$id": "#primitives",
                          "description": "Further restriction on `http://json-schema.org/draft-07/schema#/definitions/simpleTypes`.",
                          "enum": [
                            "boolean",
                            "integer",
                            "number",
                            "string"
                          ]
                        }
                      },
                      "additionalProperties": false,
                      "required": ["type"],
                      "properties": {
                        "type": {
                          "anyOf": [
                            { "$ref": "#primitives" },
                            { "items": { "$ref": "#primitives" } }
                          ]
                        },
                        "format": true
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "anyOf": {
          "maxItems": 2,
          "items": [
            {
              "$id": "#expected-type",
              "required": ["$ref"],
              "properties": {
                "$ref": { "const": "#/definitions/ExpectedType" }
              }
            },
            {
              "additionalProperties": false,
              "required": ["type", "items"],
              "properties": {
                "type": { "const": "array" },
                "items": { "$ref": "#expected-type" }
              }
            }
          ]
        }
      }
    }
  ]
}
